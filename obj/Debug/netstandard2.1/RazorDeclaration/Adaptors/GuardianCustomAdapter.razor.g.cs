#pragma checksum "C:\Users\davew\OneDrive\Documents\GitHub\LCMSMSPWA\Adaptors\GuardianCustomAdapter.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "948c6f6575618494d9d0ed5888ed9b862c9e6888"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace LCMSMSPWA.Adaptors
{
    #line hidden
    using System;
#nullable restore
#line 1 "C:\Users\davew\OneDrive\Documents\GitHub\LCMSMSPWA\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\davew\OneDrive\Documents\GitHub\LCMSMSPWA\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\davew\OneDrive\Documents\GitHub\LCMSMSPWA\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\davew\OneDrive\Documents\GitHub\LCMSMSPWA\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\davew\OneDrive\Documents\GitHub\LCMSMSPWA\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\davew\OneDrive\Documents\GitHub\LCMSMSPWA\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\davew\OneDrive\Documents\GitHub\LCMSMSPWA\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\davew\OneDrive\Documents\GitHub\LCMSMSPWA\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\davew\OneDrive\Documents\GitHub\LCMSMSPWA\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\davew\OneDrive\Documents\GitHub\LCMSMSPWA\_Imports.razor"
using LCMSMSPWA;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\davew\OneDrive\Documents\GitHub\LCMSMSPWA\_Imports.razor"
using LCMSMSPWA.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\davew\OneDrive\Documents\GitHub\LCMSMSPWA\_Imports.razor"
using LCMSMSPWA.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\davew\OneDrive\Documents\GitHub\LCMSMSPWA\_Imports.razor"
using LCMSMSPWA.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\davew\OneDrive\Documents\GitHub\LCMSMSPWA\_Imports.razor"
using LCMSMSPWA.Repository;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "C:\Users\davew\OneDrive\Documents\GitHub\LCMSMSPWA\_Imports.razor"
using MatBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "C:\Users\davew\OneDrive\Documents\GitHub\LCMSMSPWA\_Imports.razor"
using Radzen;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "C:\Users\davew\OneDrive\Documents\GitHub\LCMSMSPWA\_Imports.razor"
using Radzen.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "C:\Users\davew\OneDrive\Documents\GitHub\LCMSMSPWA\_Imports.razor"
using Syncfusion.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 19 "C:\Users\davew\OneDrive\Documents\GitHub\LCMSMSPWA\_Imports.razor"
using Syncfusion.Blazor.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 20 "C:\Users\davew\OneDrive\Documents\GitHub\LCMSMSPWA\_Imports.razor"
using Syncfusion.Blazor.Grids;

#line default
#line hidden
#nullable disable
#nullable restore
#line 21 "C:\Users\davew\OneDrive\Documents\GitHub\LCMSMSPWA\_Imports.razor"
using Syncfusion.Blazor.Buttons;

#line default
#line hidden
#nullable disable
#nullable restore
#line 22 "C:\Users\davew\OneDrive\Documents\GitHub\LCMSMSPWA\_Imports.razor"
using Syncfusion.Blazor.DropDowns;

#line default
#line hidden
#nullable disable
#nullable restore
#line 23 "C:\Users\davew\OneDrive\Documents\GitHub\LCMSMSPWA\_Imports.razor"
using BlazorInputFile;

#line default
#line hidden
#nullable disable
#nullable restore
#line 24 "C:\Users\davew\OneDrive\Documents\GitHub\LCMSMSPWA\_Imports.razor"
using Syncfusion.Blazor.Navigations;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "C:\Users\davew\OneDrive\Documents\GitHub\LCMSMSPWA\Adaptors\GuardianCustomAdapter.razor"
using Microsoft.AspNetCore.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\davew\OneDrive\Documents\GitHub\LCMSMSPWA\Adaptors\GuardianCustomAdapter.razor"
using System.Collections.Generic;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\davew\OneDrive\Documents\GitHub\LCMSMSPWA\Adaptors\GuardianCustomAdapter.razor"
using System.Linq;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\davew\OneDrive\Documents\GitHub\LCMSMSPWA\Adaptors\GuardianCustomAdapter.razor"
using System.Threading.Tasks;

#line default
#line hidden
#nullable disable
    public partial class GuardianCustomAdapter : DataAdaptor<IGuardianRepository>
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 13 "C:\Users\davew\OneDrive\Documents\GitHub\LCMSMSPWA\Adaptors\GuardianCustomAdapter.razor"
       
  
    [Parameter]
    public RenderFragment ChildContent { get; set; }

    public List<Guardian> Guardians { get; set; }
    
    bool gridInitialized = false; 
    
    public override async Task<object> ReadAsync(DataManagerRequest dm, string key = null)
    {   
        if (!gridInitialized)
        {
            // Get data from API
            Guardians = await Service.GetGuardiansAsync();        
            gridInitialized = true;            
        }

        await Task.Yield();  
        IEnumerable<Guardian> dataSource = Guardians; 

        if (dm.Search != null && dm.Search.Count > 0)
        {
            // Searching
            dataSource = DataOperations.PerformSearching(dataSource, dm.Search);
        }
        if (dm.Sorted != null && dm.Sorted.Count > 0)
        {
            // Sorting
            dataSource = DataOperations.PerformSorting(dataSource, dm.Sorted);
        }
        if (dm.Where != null && dm.Where.Count > 0)
        {
            // Filtering
            dataSource = DataOperations.PerformFiltering(dataSource, dm.Where, dm.Where[0].Operator);
        }    

        int count = dataSource.Cast<Guardian>().Count();

        if (dm.Skip != 0)
        {
            dataSource = dataSource.Skip(dm.Skip); //Paging
        }       
    
        if (dm.Take != 0)
        {               
            dataSource = dataSource.Take(dm.Take);
        }
        
        return dm.RequiresCounts ? new DataResult() { Result = dataSource, Count = count } : (object)dataSource;
    }  

    public override async Task<object> InsertAsync(DataManager dm, object value, string key)
    {
        var guardian = value as Guardian;
        if (guardian == null) return value;

        var newGuardian = new GuardianCreation
        {
            FirstName = guardian.FirstName,
            LastName = guardian.LastName,
            Location = guardian.Location
        };
       
        await Service.AddGuardianAsync(newGuardian);
        Guardians?.Insert(0, guardian);
        return value;
    }   

    public override async Task<object> UpdateAsync(DataManager dm, object value, string keyField, string key)
    {
        var guardian = (value as Guardian);
        if (guardian == null) return value;
        var guardianEdit = new GuardianEdit
        {
            FirstName = guardian.FirstName,
            LastName = guardian.LastName,
            Location = guardian.Location
        };

        // So the record in the grid will immediately update
        var guardianFromCache = Guardians.FirstOrDefault(g => g.GuardianID == guardian.GuardianID);
        if (guardianFromCache != null)
        {
            guardianFromCache.FirstName = guardian.FirstName;
            guardianFromCache.LastName = guardian.LastName;
            guardianFromCache.Location = guardian.Location;
        }
        
        await Service.UpdateGuardianAsync(guardian.GuardianID, guardianEdit);
        return value;
    }  

    public override async Task<object> RemoveAsync(DataManager dm, object value, string keyField, string key)
    {            
        int guardianId;  
        if (int.TryParse(value.ToString(), out guardianId)) {
            await Service.DeleteGuardianAsync(guardianId);
            var guardianToDelete = Guardians.FirstOrDefault(x => x.GuardianID == guardianId);
            Guardians.Remove(guardianToDelete);
        }       
        return value;
    }  


#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591

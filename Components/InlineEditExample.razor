@page "/inlineedit"

<h3>InlineEditExample</h3>

@using Syncfusion.Blazor.InPlaceEditor


<div>
    <SfInPlaceEditor Mode="@Mode" 
                     EditableOn="@EditableOn" 
                     Type="InputType.Text" 
                     ShowButtons="@ShowButtons" 
                     Disabled="@Disabled" 
                     Value="@TextValue" 
                     SubmitOnEnter="true" 
                     Model="@TextModel">
        </SfInPlaceEditor>
</div>  
   
<div>
    <label class="" style="text-align: left;font-size: 14px;font-weight: 400">
        NumericTextBox
    </label>
     <SfInPlaceEditor Mode="@Mode" EditableOn="@EditableOn" Type="InputType.Numeric" ShowButtons="@ShowButtons" Disabled="@Disabled" Value="@NumericValue" Model="@NumericModel">
        </SfInPlaceEditor>

</div>
   
<div>
       <label class="" style="text-align: left;font-size: 14px;font-weight: 400">
                  MaskedTextBox
              </label>
          
              <SfInPlaceEditor Mode="@Mode" EditableOn="@EditableOn" Type="InputType.Mask" ShowButtons="@ShowButtons" Disabled="@Disabled" Value="@MaskValue" Model="@MaskedModel">
              </SfInPlaceEditor>
</div>

 
          
    
@code {
    private RenderMode Mode = RenderMode.Inline;
    private EditableType EditableOn = EditableType.EditIconClick;
    private bool Disabled { get; set; } = false;
    private bool ShowButtons { get; set; } = true;
    private string TextValue = "Andrew";
    private string MaskValue = "012-345-6789";
    private string NumericValue = "$100.00";
    private object MaskedModel = new
    {
        mask = "000-000-0000"
    };
    private object TextModel = new
    {
        placeholder = "Enter employee name"
    };
    private object NumericModel = new
    {
        placeholder = "Currency format",
        value = 100,
        format = "c2"
    };
    public class InplaceModes
    {
        public string value { get; set; }
        public string text { get; set; }
    }
    public class InplaceEditableModes
    {
        public string value { get; set; }
        public string text { get; set; }
    }
}
<style>
    .inplace-control-section.default_layout .e-inplaceeditor .e-editable-component .e-clear-icon-hide,
    .e-inplaceeditor-tip .e-editable-component .e-input-group .e-clear-icon.e-clear-icon-hide {
        display: block;
        visibility: hidden;
    }
   .inplace-control-section.default_layout .e-inplaceeditor .e-editable-component .e-clear-icon-hide,
    .e-inplaceeditor-tip .e-editable-component .e-input-group .e-clear-icon.e-clear-icon-hide {
        display: block;
        visibility: hidden;
    }
    /* custom code start */
    .inplace-control-section.default_layout .control_wrapper {
        width: 100%;
        max-width: 400px;
        margin: auto;
    }
    .inplace-control-section.default_layout .control_wrapper table td {
        width: 200px;
        height: 100px;
    }
    /* custom code end */
    .inplace-control-section.default_layout .control_wrapper .control-center {
        text-align: center;
    }
    .inplace-control-section.default_layout .control_wrapper table td .control-label {
        margin-bottom: 0px;
    }
    .inplace-control-section.default_layout .e-inplaceeditor {
        height: auto;
    }
    .property-section table td {
        width: 50%;
    }
    .property-section table div {
        padding-left: 10px;
        padding-top: 10px;
    }
    @@media (max-width: 1200px) {
        .inplace-control-section.default_layout {
            width: 100%;
        }
    }
    @@media (max-width: 768px) {
        .inplace-control-section .control_wrapper table tr td:nth-child(1) {
            width: 130px;
        }
        .inplace-control-section .control_wrapper table tr td:nth-child(2) {
            width: 200px;
        }
    }
</style>